name: Slack Notify

on:
    workflow_call:
        inputs:
            status:
                required: true
                type: string
            repository:
                required: false
                type: string
            branch:
                required: false
                type: string
            commit_sha:
                required: false
                type: string
            actor:
                required: false
                type: string
            action_name:
                required: false
                type: string
        secrets:
            SLACK_CHANNEL:
                required: true
            SLACK_BOT_TOKEN:
                required: true

jobs:
    notify:
        runs-on: ubuntu-latest
        steps:
            - name: Build message
              id: build_message
              run: |
                echo "Building message for Slack notification"
                
                repo="${{ inputs.repository }}"
                branch="${{ inputs.branch }}"
                actor="${{ inputs.actor }}"
                action="${{ inputs.action_name }}"
                sha="${{ inputs.commit_sha }}"
                status="${{ inputs.status }}"

                [ -z "$repo" ] && repo="n/a"
                [ -z "$branch" ] && branch="n/a"
                [ -z "$actor" ] && actor="n/a"
                [ -z "$action" ] && action="n/a"
                [ -z "$sha" ] && sha="n/a"

                echo "SLACK_MESSAGE<<EOF" >> $GITHUB_ENV
                echo "*Deployment ${status}*" >> $GITHUB_ENV
                echo "*Repository:* \`${repo}\`" >> $GITHUB_ENV
                echo "*Branch:* \`${branch}\`" >> $GITHUB_ENV
                echo "*Commit:* \`${sha}\`" >> $GITHUB_ENV
                echo "*Author:* \`${actor}\`" >> $GITHUB_ENV
                echo "*Action:* \`${action}\`" >> $GITHUB_ENV
                echo "EOF" >> $GITHUB_ENV

            - name: Build Slack payload
              env:
                STATUS: ${{ inputs.status }}
                REPO: ${{ inputs.repository }}
                BRANCH: ${{ inputs.branch }}
                SHA: ${{ inputs.commit_sha }}
                ACTOR: ${{ inputs.actor }}
                ACTION_NAME: ${{ inputs.action_name }}
                GITHUB_RUN_ID: ${{ github.run_id }}
              run: |
                  echo "Building message with env vars:"
                  echo "REPO=$REPO, BRANCH=$BRANCH, SHA=$SHA, ACTOR=$ACTOR, ACTION_NAME=$ACTION_NAME"
              
                  payload=$(jq -n \
                    --arg channel "${{ secrets.SLACK_CHANNEL }}" \
                    --arg status "$STATUS" \
                    --arg repo "$REPO" \
                    --arg branch "$BRANCH" \
                    --arg sha "$SHA" \
                    --arg actor "$ACTOR" \
                    --arg action "$ACTION_NAME" \
                    --arg url "https://github.com/$REPO/actions/runs/$GITHUB_RUN_ID" \
                    '{
                      channel: $channel,
                      blocks: [
                        {
                          "type": "header",
                          "text": {
                            "type": "plain_text",
                            "text": ":rocket: Deployment \($status | ascii_upcase) :rocket:",
                            "emoji": true
                          }
                        },
                        {
                          "type": "section",
                          "fields": [
                            { "type": "mrkdwn", "text": "*Repository:*\n`\($repo)`" },
                            { "type": "mrkdwn", "text": "*Branch:*\n`\($branch)`" },
                            { "type": "mrkdwn", "text": "*Commit:*\n`\($sha)`" },
                            { "type": "mrkdwn", "text": "*Author:*\n`\($actor)`" },
                            { "type": "mrkdwn", "text": "*Workflow:*\n`\($action)`" }
                          ]
                        },
                        {
                          "type": "actions",
                          "elements": [
                            {
                              "type": "button",
                              "text": {
                                "type": "plain_text",
                                "text": "View Workflow",
                                "emoji": true
                              },
                              "url": $url,
                              "style": "primary"
                            }
                          ]
                        }
                      ]
                    }')
              
                  echo "Slack payload: $payload"
              
                  curl -s -X POST \
                    -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" \
                    -H "Content-Type: application/json" \
                    --data "$payload" \
                    https://slack.com/api/chat.postMessage
